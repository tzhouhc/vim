{"Autocommand Groups":{"prefix":"autogr","body":"vim.api.nvim_create_augroup(\"$1\", { clear = true })"},"Conditional for macos":{"prefix":"ifmac","body":"if vim.fn.has(\"macunix\") then\nend"},"lazyevent":{"prefix":"lazyevent","body":"event = { \"BufReadPost\", \"BufNewFile\", \"BufWritePre\" },"},"vimmode":{"body":"vim.fn.mode()","prefix":"vimmode"},"keymap":{"prefix":"keymap","body":["vim.keymap.set(","  \"n\",","  \"\",","  \"<cmd><cr>\",","  { noremap = true, silent = true }",")"]},"Autocommands":{"prefix":"autocmd","body":"vim.api.nvim_create_autocmd({ \"BufEnter\" }, {\n  pattern = { \"*.*\" },\n  callback = function()\n  end,\n  group = \"Misc\",\n})"},"hslogger":{"prefix":"hslogger","body":"local logger = hs.logger.new(\"$1\", \"debug\")"},"usercmd":{"body":["vim.api.nvim_create_user_command(\"CmdName\", function()","  -- vim.cmd(\"SomeCommand\")","end, { range = true})"],"prefix":"usercmd"},"Vim Input UI":{"prefix":"viminput","body":"vim.ui.input({ prompt = \"$1\" }, function(input)\nend)"}}